rule create_multiqc_report_for_assembly:
    params:
        configfile = multiqc_configfile
    conda:
        pipeline_path + "envs/multiqc.yml"
    input:
        assembly=expand("samples/{sample}/multiqc/assembly/log.txt", sample = list(read_naming.keys())),
        mapping=expand("samples/{sample}/multiqc/mapping_to_{sample}_assembled_genome/bwa/log.txt", sample = list(read_naming.keys())),
    output:
        "quality/multiqc/assembly/multiqc_report.html"
    log:
        logging_folder + "logs/quality/multiqc/assembly.txt"
    shell:
        """
        multiqc -c {params.configfile} -f -o $(dirname {output[0]}) $(dirname {input[assembly]} {input[mapping]} | tr "\n" " ") &> {log[0]}
        """


rule create_multiqc_report_for_mapping:
    params:
        configfile = multiqc_configfile
    conda:
        pipeline_path + "envs/multiqc.yml"
    input:
        mapping = expand("samples/{sample}/multiqc/mapping_to_{{ref}}/{{mapping_method}}/log.txt", sample = list(read_naming.keys())),
    output:
        "quality/multiqc/mapping_to_{ref}/{mapping_method}/multiqc_report.html"
    log:
        logging_folder + "logs/quality/multiqc/mapping_to_{ref}.txt"
    shell:
        """
        multiqc -c {params.configfile} -f -o $(dirname {output[0]}) $(dirname {input[mapping]}) &> {log[0]}
        """


        
