rule determine_mlst:
    conda:
        pipeline_path + "envs/mlst.yml"
    input:
        fasta = "samples/{sample}/annotation/{sample}.fsa",
    output:
        mlst = "samples/{sample}/typing/mlst.txt"
    shell:
        """
        mlst --quiet {input[fasta]} | sed "s/.*\///" | sed "s/\.fsa//"  > {output[0]}
        """

        
rule merge_mlst_from_all_samples:
    conda:
        pipeline_path + "envs/mlst.yml"
    input:
        mlsts = expand("samples/{sample}/typing/mlst.txt", sample=read_naming.keys())
    output:
        "typing/mlst/summary.tsv"
    shell:
        """
        cat {input[mlsts]} > {output}
        """

rule determine_mlst_reference_genome:
    conda:
        pipeline_path + "envs/mlst.yml"
    input:
        genome="references/{ref}/genome_fasta.fasta"
    output:
        "references/{ref}/mlst.tsv"
    shell:
        """
        mlst --quiet {input[genome]}  | sed "s/.*\///" | sed "s/_genome\.fasta//" > {output[0]}
        """

rule generate_xlsx_file_from_mlst_results:
    conda:
        pipeline_path + "envs/pandas-openpyxl-pronto-xlrd.yml"
    input:
        "typing/mlst/{file}.tsv"
    output:
        "typing/mlst/{file}.xlsx"
    script:
        "scripts/mlst_csv_to_xlsx.py"
