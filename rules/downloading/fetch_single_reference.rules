rule download_reference_from_refseq:
    conda:
        "../../envs/entrez-direct.yml"
    output:
        genome="references/{ref,[0-9]+}/genome_{format}.{format}",
    shell:
        """
        ftp=$(efetch -db assembly -id {wildcards.ref} -format docsum | xtract -pattern DocumentSummary -unless LatestAccession -if AssemblyStatus -equals "Complete Genome" -if FtpPath_RefSeq -element FtpPath_RefSeq)
        nucl_id=$(echo ${{ftp}} | sed  "s/\(\/GCF_.*\)/\\1\\1_assembly_report.txt/" | xargs wget -qO- | sed '/^#.*/ d'  | awk ' $4 == "Chromosome" {{print $7}}')
        efetch -db nucleotide -id ${{nucl_id}} -format {wildcards.format} > {output[genome]} 
        """


rule download_reference_from_nucleotide:
    conda:
        "../../envs/entrez-direct.yml"
    output:
        genome="references/NC{ref}/genome_{format}.{format}",
    shell:
        """
        efetch -db nucleotide -id NC{wildcards.ref} -format {wildcards.format} > {output[genome]} 
        """



rule get_strain_subvalue_identifier_reference:
    conda:
        "../../envs/entrez-direct.yml"
    output:
        subvalue="references/{ref,[0-9]+}/genome_subvalue.txt",
    shell:
        """
        efetch -db assembly -id {wildcards.ref} -format docsum | xtract -pattern DocumentSummary -unless LatestAccession -if AssemblyStatus -equals "Complete Genome" -if FtpPath_RefSeq -element Sub_value > {output[subvalue]}
        """

    
rule download_gff_for_reference_from_refseq:
    conda:
        pipeline_path + "envs/entrez-direct.yml"
    output:
        gff="references/{ref,[0-9]+}/genome.gff"
    shell:
        """
        ftp=$(efetch -db assembly -id {wildcards.ref} -format docsum | xtract -pattern DocumentSummary -unless LatestAccession -if AssemblyStatus -equals "Complete Genome" -if FtpPath_RefSeq -element FtpPath_RefSeq)
        nucl_id=$(echo ${{ftp}} | sed  "s/\(\/GCF_.*\)/\\1\\1_genomic.gff.gz/")
        wget -qO- ${{nucl_id}} | gzip -d > {output[gff]}
        """

    
