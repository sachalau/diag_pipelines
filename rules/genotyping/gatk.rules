rule create_dictionary_for_reference:
    conda:
        pipeline_path + "envs/gatk.yml"
    input:
        ref = "references/{ref}/genome_fasta.fasta"
    output:
        dictionary = "references/{ref}/genome_fasta.dict"
    log:
        logging_folder + "logs/references/{ref}/create_dictionnary.txt"
    shell:
        """
        samtools faidx {input[ref]}
        gatk-launch CreateSequenceDictionary --REFERENCE {input[ref]} &> {log}
        """
        
rule genotype_with_HaplotypeCaller_GATK_BP_RESOLUTION:
    conda:
        pipeline_path + "envs/gatk.yml"
    input:
        bam = "samples/{sample}/mapping/{mapping_method}/{ref}/{any_cram}.bam",
        bam_bai = "samples/{sample}/mapping/{mapping_method}/{ref}/{any_cram}.bam.bai",
        ref = "references/{ref}/genome_fasta.fasta",
        ref_dict = "references/{ref}/genome_fasta.dict",
    output:
        gvcf = temp("samples/{sample}/genotyping/gatk/{ref}/{mapping_method}/{any_cram}/snps.vcf"),
        gvcf_index = temp("samples/{sample}/genotyping/gatk/{ref}/{mapping_method}/{any_cram}/snps.vcf.idx"),
    log:
        logging_folder + "samples/{sample}/logs/snps/gatk/{ref}/{mapping_method}/{any_cram}/haplotypecaller_gvcf.txt",
    shell:
        """
        gatk-launch HaplotypeCaller --sample-ploidy 1 --output {output[gvcf]} --input {input[bam]} --reference {input[ref]} &> {log[0]}
        """

        
