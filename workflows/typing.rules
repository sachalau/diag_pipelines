import itertools

include:
    "assembly_quality.rules"

try:
    ref_ids_for_mapping
except NameError:
    try:
        ref_ids_for_mapping = config["ref_ids_for_mapping"]
    except KeyError:
        ref_ids_for_mapping = ""


species = config["species"].replace(" ", "_")
minimum_coverage = config["minimum_coverage_for_calling"]
minimum_alternate_frac = config["minimum_alternate_fraction_for_calling"]

ridom = pandas.read_csv(pipeline_path + "data/core_genome_dbs/ridom_database.tsv", sep="\t", index_col=0)
enterobase = pandas.read_csv(pipeline_path + "data/core_genome_dbs/enterobase_database.tsv", sep="\t", index_col=0)

all_core_genome_dbs = pandas.concat([ridom, enterobase])

all_combined_1, all_combined_2 = [], []

for i, j in (itertools.combinations(sorted(read_naming.keys()),2)):
    all_combined_1.append(i)
    all_combined_2.append(j)

include:
    pipeline_path + "rules/core_genome/bed_creation_parsnp.rules"
    
if species in all_core_genome_dbs.index:
    include:
        pipeline_path + "rules/core_genome/cgMLST.rules"
        
include:
    pipeline_path + "rules/downloading/fetch_single_reference.rules"

include:
    pipeline_path + "rules/downloading/adapting_genome_files.rules"
    
include:
    pipeline_path + "rules/mapping/find_closest_genomes.rules"

include:
    pipeline_path + "rules/genotyping/freebayes.rules"

include:
    pipeline_path + "rules/genotyping/gatk.rules"

include:
    pipeline_path + "rules/vcf_manipulation/filtering.rules"
    
include:
    pipeline_path + "rules/vcf_manipulation/splitting_merging.rules"
    
include:
    pipeline_path + "rules/vcf_manipulation/indexing.rules"

include:
    pipeline_path + "rules/vcf_manipulation/calculate_differences.rules"

include:
    pipeline_path + "rules/vcf_manipulation/create_alignment_for_phylogeny.rules"

include:
    pipeline_path + "rules/typing/snp_distance.rules"

include:
    pipeline_path + "rules/typing/mlst.rules"
 
include:
    pipeline_path + "rules/phylogeny/raxml.rules"

include:
    pipeline_path + "rules/phylogeny/image_creation.rules"

if species in all_core_genome_dbs.index:
    rule all_typing:
        input:
            "typing/freebayes_joint_genotyping/cgMLST/bwa/distances_in_snp_mst_no_st.svg"

